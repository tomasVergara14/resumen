<%- include('./partials/head') %>
<%- include('./partials/header') %>
<body>
    <div class="container1">
        <div class="text">
            <h3>JavaScript Loops  </h3>
            <p>They are a simple and fast way to repeat a series of instructions, and they are run a finite number of times</p>
            <p>JavaScript has different forms of loops: </p>
            <ul>
                <li id="for" class="for">for</li>
                <li id="while" class="while">while</li>
                <li id="do-while" class="do-while">do-while</li>
                <li id="for-in" class="for-in">for-in</li>
                <li id="for-of" class="for-of">for-of</li>
            </ul>
        </div>
    </div>
    <div class="container1">
        <div class="text">
            <h4>- for </h4>
            <p>The for statement creates a loop consisting of 3 optional expressions, enclosed in parentheses and separated by ";"  </p>
            <p>followed by a statement to be executed in a loop</p>
            <p>Example:</p>
        </div>
        <div class="example">    
            <pre>for( initialization; condition; finalExpression) { </pre>
            <p class="comment" >// the statement to be executed in every loop</p>
            <pre> statement(s);</pre>
            <pre>}</pre>
        </div>
    </div>
    <div class="container1">
        <div class="text">
            <h4>Components</h4>
            <p>- Initialization: an expression or variable typically used to initializate a countable variable </p>
            <p>- Condition: this is the termination condition , which is evaluated before starting a new loop. If the condition is met, the statement is executed. If the condition is not met, it will execute the following line after the loop. If it is not present the condition, it is always executed</p>
            <p>- Final Expression: Its an expression that will be evaluated at the end of each turn of the loop, increasing or decreasing. This occurs prior to the new evaluation of the condition in the new round</p>
            <p>- Statement: The code that will be executed when the condition returns true. </p>
        </div>
    
        <div class="example">    
            <pre>for( let i = 0; i < input ; i++ ) {</pre>
            <p class="comment" >// Where the laps starts at 0</p>
            <p class="comment" >// the condition - it will be executed as long as i is less than input</p>
            <p class="comment" >// It will increase the number of laps from 1 to 1</p>
            <pre> statement(s);</pre>
            <pre>}</pre>
        </div>
        <div class="example">
            <pre>function print (n){</pre>    
            <pre>   for( let i = 0; i < input ; i++ ) {</pre>
            <pre>       console.log("i equals = " + i)</pre>
            <pre>   }</pre>
            <pre>}</pre>
            <pre>print(4)</pre>
        </div>
    </div>
    <div class="container1">
        <div class="text">
            <h4>- while </h4>
            <p>The while statement creates a loop that executes its internal statement, as long as the specified condition is met, the condition is always evaluated prior to each turn.   </p>
            <p>Example:</p>
        </div>
        <div class="example">    
            <pre> while (condition) {</pre>
            <p class="comment" >// the statement to be executed in every loop</p>
            <pre> statement(s);</pre>
            <pre>}</pre>
        </div>
    </div>
    <div class="container1">
        <div class="text">
            <h4>Components</h4>
            <p>- Condition: If the expression returns true, it will be executed the statement, otherwise jumps to the next line of code</p>
            <p>- Statement: The code that will be executed when the condition returns true. </p>
        </div>
        <div class="example">
            <pre>function print (input){</pre>    
            <pre>    var i = 1;</pre>
            <pre>    while( i <= input){</pre>
            <pre>       console.log("i equals = " + i)</pre>
            <p class="comment" >// this line indicates that it will be increasing the value by one by one</p>
            <pre>    i++</pre>
            <pre>   }</pre>
            <pre>}</pre>
            <pre>print(4)</pre>
        </div>
    </div>
    <div class="container1">
        <div class="text">
            <h4>- do-while </h4>
            <p>The do-while statement creates a loop that is executed until a certain specified condition returns false. The condition is evaluated after the internal statement of the loop is executed, in this way is executed at least once always </p>
            <p>Example:</p>
        </div>
        <div class="example">    
            <pre> do{</pre>
            <p class="comment" >// The statement to be executed in every loop that returns true, at least is executed once</p>
            <pre> statement(s);</pre>
            <p class="comment" >// The condition to fulfill, it will executed until it returns false</p>
            <pre>} while (condition);</pre>
        </div>
    </div>
    <div class="container1">
        <div class="text">
            <h4>Components</h4>
            <p>- Condition: The condition is evaluated after executing the code, whether it is true or false, it is executed once. If it is true it will be executed again.</p>
            <p>- Statement: The code that will be executed when the condition returns true. </p>
        </div>
        <div class="example">
            <pre>function print (input){</pre>    
            <pre>    var i = 1;</pre>
            <pre>    do{</pre>
            <pre>       console.log("i equals = " + i)</pre>
            <p class="comment" >// this line indicates that it will be increasing the value by one by one</p>
            <pre>       i++</pre>
            <pre>   }while( i <= input)</pre>
            <pre>}</pre>
            <pre>print(4)</pre>
        </div>
    </div>
    <div class="container1">
        <div class="text">
            <h4>- for-in </h4>
            <p>This loop iterates over the name of each property in an object, allowing the statements to be executed on each property </p>
            <p>Example:</p>
        </div>
        <div class="example">    
            <pre> for (var variable in object) {</pre>
            <p class="comment" >// The statement to be executed in each property</p>
            <pre> statement;</pre>
            <pre> }</pre>
        </div>
    </div>
    <div class="container1">
        <div class="text">
            <h4>Components</h4>
            <p>- Variable: A variable that refers different property names in each iteration of the loop</p>
            <p>- Object: The object over which it is iterating  </p>
        </div>
        <div class="example">
            <pre>var actress = {</pre>    
            <pre>    firstName: "julia",</pre>
            <pre>    lastName: "Roberts",</pre>
            <pre>    age: 33,</pre>
            <pre>    nationality: "yankee"</pre>
            <pre>}</pre>
            <pre>for (var propiedad in actress) {</pre>
            <pre>    console.log("actress." + propiedad + 

                " = " actress[propiedad])</pre>
            <pre>}</pre>
        </div>
    </div>
    <div class="container1">
        <div class="text">
            <p>prints:</p>
            <p>-  actress.firstName = Julia</p>
            <p>-  actress.lastName = Roberts</p>
            <p>-  actress.age = 33</p>
            <p>-  actress.nationality = yankee</p>
        </div>
    </div>
    <div class="container1">
        <div class="text">
            <h4>- for-of </h4>
            <p>In this loop, iterable objects are iterated, such as: arrays, map, set, strings, objects.</p>
            <p>Iterate over the value of each distinct property in the structure, such as a letter in a string, or each element in an array.</p>
            <p>Example:</p>
        </div>
        <div class="example">    
            <pre> for( let variable of iterable) {</pre>
            <p class="comment" >// the statement to be executed in every loop</p>
            <pre> statement;</pre>
            <pre>}</pre>
        </div>
    </div>
    <div class="container1">
        <div class="text">
            <h4>Components</h4>
            <p>- Variable: refers to the value of the property in each iteration of the loop </p>
            <p>- Object: The object over which it is iterating  </p>
        </div>
        <div class="example">
            <pre>function split (input) {</pre>    
            <pre>    var separador = " "</pre>
            <pre>    var array = input.split(separador)</pre>
            <p class="comment" >//Shows the result</p>
            <pre>    console.log(array) </pre>
            <pre>    for ( value of array ) {</pre>
            <p class="comment" >// Prints each one separately</p>
            <pre>       console.log( value)</pre>
            <pre>   }</pre>
            <pre>}</pre>
            <pre>print(4)</pre>
        </div>
    </div>
    <div class="container1">
        <div class="text">
            <p>You can also do it with map.</p>
            <p>Example:</p>
        </div>
        <div class="example">    
            <pre> let actress = new Map([</pre>
            <pre>   ["firstName", "Julia"],</pre>
            <pre>   ["lastName", "Roberts"],</pre>
            <pre>   ["age", 33],</pre>
            <pre>   ["nationality", "yankee"],</pre>
            <pre> ])</pre>
            <pre> for (let info of actress) {</pre>
            <p class="comment">//Prints key:value</p>
            <pre>   console.log(info)</pre>
            <pre>}</pre>
            <pre> for (let info of actress) {</pre>
            <p class="comment">individually print each key:value</p>
            <pre>   console.log( info[0] + ": " + info[1] )</pre>
            <pre>}</pre>
        </div>
    </div>
    <div class="container1">
        <div class="text">
            <p>prints:</p>
            <p>-  firstName : Julia</p>
            <p>-  lastName : Roberts</p>
            <p>-  age : 33</p>
            <p>-  nationality : yankee</p>
        </div>
    </div>
</body>

<%- include('./partials/footer') %>